<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hidden Publication</title>
    <link href="/util.css" rel="stylesheet"/>
</head>
<body>
{{>util/header}}

<div style="display: flex; justify-content: space-between; align-items: center; margin: 2rem 1.5rem 1rem 1.5rem;">
    <h1 style="font-size: 1.5rem; font-weight: 400;">
        publications
    </h1>
</div>

<section style="flex-direction: row; gap: 1rem; display: flex; flex-wrap: wrap; margin: 1rem 1.5rem;">
    {{#publications}}
        <div
            id="{{id}}"
            class="yellow-box"
            onclick="window.location='hidden/publication/{{id}}'"
            style="text-decoration: none; color: black; cursor: pointer;"
        >
            <p class="yellow-box-text">{{title}}</p>
            <div class="yellow-box-buttons">
                <button id="{{id}}" data-title="{{title}}" data-type="delete-button" onclick="event.stopPropagation()" class="m3-button red-button" style="font-size: 0.8rem; width: fit-content; box-shadow: none; text-wrap: nowrap; padding: 0.5rem; border-radius: 1rem;">Delete permanently</button>
                <button id="{{id}}" data-title="{{title}}" data-type="restore-button" onclick="event.stopPropagation()" class="m3-button outline-button" style="font-size: 0.8rem; width: fit-content; text-wrap: nowrap; padding: 0.5rem; border-radius: 1rem; background-color: white;">Restore</button>
            </div>
        </div>
    {{/publications}}
</section>

<dialog id="dialog" closedby="any">
    <p id="dialog-message"></p>
    <div style="display: flex; justify-content: space-between">
        <button type="button" id="dialog-negative" class="m3-button outline-button">cancel</button>
        <div style="display: flex; justify-content: flex-end">
            <button id="dialog-positive" class="m3-button red-button" style="padding-inline: 1.2rem;">delete</button>
        </div>
    </div>
</dialog>
<script>
    const dialog = document.getElementById('dialog');
    const dialogMessage = document.getElementById('dialog-message');
    let currentId = null;
    let currentType = null;
    document.querySelectorAll('button[data-type="delete-button"], button[data-type="restore-button"]').forEach(button => {
        button.addEventListener('click', () => {
            dialogMessage.innerHTML = `permanently delete <b>${button.dataset.title}</b>`;
            if(button.dataset.type == 'delete-button') {
                dialogMessage.innerHTML = `permanently delete <b>${button.dataset.title}</b>?`;
            } else {
                dialogMessage.innerHTML = `restore <b>${button.dataset.title}</b>?`;
            }
            currentId = button.id;
            currentType = button.dataset.type;
            dialog.showModal();
        });
    });
    document.getElementById('dialog-negative').addEventListener('click', () => dialog.close());
    document.getElementById('dialog-positive').addEventListener('click', async () => {
        if(currentType == 'delete-button') {
            const response = await fetch(`/api/publication/${currentId}/delete`, { method: 'DELETE' });
            if(!response.ok) { alert('failed to permanently delete publication'); return; }
        } else {
            const response = await fetch(`/api/publication/${currentId}/update-hidden?isHidden=false`, { method: 'PUT' });
            if(!response.ok) { alert('failed to restore publication'); return; }
        }
        document.querySelector(`div[id="${currentId}"]`).remove();
        dialog.close();
    });
</script>
</body>
<style>
    .m3-button:active {
        transform: none;
        box-shadow: none !important;
    }
</style>
</html>