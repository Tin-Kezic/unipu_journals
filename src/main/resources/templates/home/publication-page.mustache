<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>publications</title>
    <link href="/util.css" rel="stylesheet"/>
    <link rel="icon" href="/favicon.ico" type="image/x-icon">
    <script src="/htmx.min.js"></script>
</head>
<body>
{{>util/header}}

<div style="display: flex; justify-content: space-between; align-items: center; margin: 2rem 1.5rem 1rem 1.5rem;">
    <h1 style="font-size: 1.5rem; font-weight: 400; user-select: none;">
        publications
    </h1>
    {{#isAdmin}}
        <button id="add-publication" class="m3-button purple-button"  style="padding: 0.7rem 1.3rem; font-size: 1rem; border-radius: 0.5rem; box-shadow: none;">+ Add publication</button>
    {{/isAdmin}}
</div>

<section id="publications" style="flex: row; gap: 1rem; display: flex; flex-wrap: wrap; margin: 1rem 1.5rem;">
    {{#publications}}
        <div
            class="yellow-box"
            style="cursor: pointer;"
            onclick="window.location='/publication/{{id}}'"
        >
            <p class="yellow-box-text">{{title}}</p>
            <div class="yellow-box-buttons">
                {{#canHide}}
                    <button
                        onclick="event.stopPropagation()"
                        data-type="hide-button"
                        data-id="{{id}}"
                        data-title="{{title}}"
                        class="m3-button purple-button"
                        style="font-size: 0.8rem; width: 3.8rem; box-shadow: none;"
                    >Hide</button>
                {{/canHide}}
                {{#canEdit}}
                    <button
                        onclick="event.stopPropagation()"
                        data-type="edit-button"
                        data-id="{{id}}"
                        data-title="{{title}}"
                        class="m3-button yellow-button"
                        style="font-size: 0.8rem; width: 3.8rem; box-shadow: none;"
                    >Edit</button>
                {{/canEdit}}
            </div>
        </div>
    {{/publications}}
</section>

<dialog id="insert-publication-dialog" closedby="any" style="
        left: 0; right: 0; top: 0; bottom: 0;
        margin: auto; position: absolute;
        padding: 1.5rem;
        border: none; border-radius: 0.5rem;
    ">
    <p id="insert-publication-dialog-message">Add publication</p>
    <form id="insert-publication-dialog-form">
        <div class="text-field">
            <label>title</label>
            <input type="text" name="insert-publication-dialog-input">
        </div>
        <div style="display: flex; justify-content: space-between">
            <button id="insert-publication-dialog-negative" class="m3-button outline-button" type="button">Cancel</button>
            <button class="m3-button purple-button" style="box-shadow: none; padding-inline: 1.8rem;">Add</button>
        </div>
    </form>
</dialog>
<dialog id="update-publication-title-dialog" closedby="any" style="
        left: 0; right: 0; top: 0; bottom: 0;
        margin: auto; position: absolute;
        padding: 1.5rem;
        border: none; border-radius: 0.5rem;
    ">
    <p id="update-publication-title-dialog-message"></p>
    <form id="update-publication-title-dialog-form">
        <div class="text-field">
            <label>title</label>
            <input type="text" name="update-publication-title-dialog-input">
        </div>
        <div style="display: flex; justify-content: space-between">
            <button id="update-publication-title-dialog-negative" class="m3-button outline-button" type="button">Cancel</button>
            <button class="m3-button yellow-button" style="box-shadow: none; padding-inline: 0.8rem;">&nbsp&nbsp Edit &nbsp&nbsp</button>
        </div>
    </form>
</dialog>
<dialog id="hide-publication-dialog" closedby="any" style="
        left: 0; right: 0; top: 0; bottom: 0;
        margin: auto; position: absolute;
        padding: 1.5rem;
        border: none; border-radius: 0.5rem;
    ">
    <p id="hide-publication-dialog-message"></p>
    <br>
    <div style="display: flex; justify-content: space-between">
        <button id="hide-publication-dialog-negative" class="m3-button outline-button">Cancel</button>
        <button id="hide-publication-dialog-positive" class="m3-button red-button">Remove</button>
    </div>
</dialog>
</body>
<style>
    .m3-button:active {
        transform: none;
        box-shadow: none !important;
    }
</style>
<script>
    {{#isAdmin}}
    const insertPublicationDialog = document.getElementById('insert-publication-dialog');
    document.getElementById('add-publication').addEventListener('click', () => insertPublicationDialog.showModal());
    document.getElementById('insert-publication-dialog-negative').addEventListener('click', () => insertPublicationDialog.close());
    document.getElementById('insert-publication-dialog-form').addEventListener('submit', async (event) => {
        event.preventDefault();
        const publicationTitleInput = document.querySelector('input[name=insert-publication-dialog-input]');
        const publicationTitle = publicationTitleInput.value;
        try {
            const response = await fetch(`/api/publication/insert?title=${encodeURIComponent(publicationTitle)}`, { method: 'POST' });
            if(!response.ok) throw new Error('failed to add publication');
            const data = await response.json();
            const newPublication = document.createElement('div');
            newPublication.addEventListener('click', () => window.location = `/publication/${data.id}`);
            newPublication.className = 'yellow-box';
            newPublication.style = 'cursor: pointer;'
            newPublication.innerHTML = `
            <p class="yellow-box-text">${data.title}</p>
            <div class="yellow-box-buttons">
                <button
                    onclick="event.stopPropagation()"
                    data-type="hide-button"
                    data-id="${data.id}"
                    class="m3-button purple-button"
                    style="font-size: 0.8rem; width: 3.8rem; box-shadow: none;"
                >Hide</button>
                <button
                    onclick="event.stopPropagation()"
                    data-type="edit-button"
                    data-id="${data.id}"
                    class="m3-button yellow-button"
                    style="font-size: 0.8rem; width: 3.8rem; box-shadow: none;"
                >Edit</button>
            </div>`;
            document.getElementById('publications').prepend(newPublication);
            publicationTitleInput.value = '';
            insertPublicationDialog.close();
        } catch(error) { alert(error.message); }
    });
    {{/isAdmin}}
    document.getElementById('add-admin-form').addEventListener('submit', async (event) => {
        event.preventDefault();
        const emailInput = document.querySelector('input[name="email"]');
        const email = emailInput.value;
        try {
            const response = await fetch(`/root/add-admin?email=${encodeURIComponent(email)}`, { method: 'POST' });
            if(!response.ok || !email) throw new Error('failed to add admin');
            const newButton = document.createElement('button');
            newButton.className = 'remove-user-button';
            newButton.dataset.email = email;
            newButton.onclick = () => dialogOpen(email);
            newButton.innerHTML = `
                ${email}
                <svg xmlns="http://www.w3.org/2000/svg" height="32px" viewBox="0 -960 960 960" width="24px" fill="white">
                    <path d="M640-520v-80h240v80H640Zm-280 40q-66 0-113-47t-47-113q0-66 47-113t113-47q66 0 113 47t47 113q0 66-47 113t-113 47ZM40-160v-112q0-34 17.5-62.5T104-378q62-31 126-46.5T360-440q66 0 130 15.5T616-378q29 15 46.5 43.5T680-272v112H40Zm80-80h480v-32q0-11-5.5-20T580-306q-54-27-109-40.5T360-360q-56 0-111 13.5T140-306q-9 5-14.5 14t-5.5 20v32Zm240-320q33 0 56.5-23.5T440-640q0-33-23.5-56.5T360-720q-33 0-56.5 23.5T280-640q0 33 23.5 56.5T360-560Zm0-80Zm0 400Z"/>
                </svg>
            `;
            // Append to admin list
            document.getElementById('admin-list').appendChild(newButton);

            emailInput.value = ''; // clear input field

        } catch(error) { alert(error.message); }
    });
    const updatePublicationTitleDialog = document.getElementById('update-publication-title-dialog');
    const hidePublicationDialog = document.getElementById('hide-publication-dialog');
    const hideButtons = document.querySelectorAll('button[data-type="hide-button"]');
    const editButtons = document.querySelectorAll('button[data-type="edit-button"]');

    function updatePublicationTitleDialogOpen(id) {
    }

    hideButtons.forEach(button => {
        button.addEventListener('click', () => hidePublicationDialog.showModal());
    });
    editButtons.forEach(button => {
        button.addEventListener('click', () => updatePublicationTitleDialog.showModal());
    });


    let currentId = null

    document.getElementById('dialog-negative').addEventListener('click', () => dialog.close())
    document.getElementById('dialog-positive').addEventListener('click', async () => {
        const response = await fetch(`/root/revoke-admin?email=${encodeURIComponent(currentEmail)}`, { method: 'DELETE' });
        if(!response.ok) { alert('failed to delete item'); return; }
        const button = document.querySelector(`.remove-user-button[data-email="${currentEmail}"]`);
        if (button) button.remove();
        dialog.close()
    });
    function dialogOpen(email) {
        document.getElementById('dialog-message').innerHTML = `Revoke admin privileges for <b>${email}</b>`;
        currentEmail = email
        dialog.showModal();
    }
    document.querySelectorAll('.remove-user-button').forEach(button => {
        button.addEventListener('click', () => dialogOpen(button.dataset.email));
    });
    document.getElementById('add-admin-form').addEventListener('submit', async (event) => {
        event.preventDefault();
        const emailInput = document.querySelector('input[name="email"]');
        const email = emailInput.value;
        const response = await fetch(`/root/add-admin?email=${encodeURIComponent(email)}`, { method: 'POST' })
        if(!response.ok || !email) { alert('failed to add admin'); return; }
        const newButton = document.createElement('button');
        newButton.className = 'remove-user-button';
        newButton.dataset.email = email;
        newButton.onclick = () => dialogOpen(email);
        newButton.innerHTML = `
            ${email}
            <svg xmlns="http://www.w3.org/2000/svg" height="32px" viewBox="0 -960 960 960" width="24px" fill="white">
                <path d="M640-520v-80h240v80H640Zm-280 40q-66 0-113-47t-47-113q0-66 47-113t113-47q66 0 113 47t47 113q0 66-47 113t-113 47ZM40-160v-112q0-34 17.5-62.5T104-378q62-31 126-46.5T360-440q66 0 130 15.5T616-378q29 15 46.5 43.5T680-272v112H40Zm80-80h480v-32q0-11-5.5-20T580-306q-54-27-109-40.5T360-360q-56 0-111 13.5T140-306q-9 5-14.5 14t-5.5 20v32Zm240-320q33 0 56.5-23.5T440-640q0-33-23.5-56.5T360-720q-33 0-56.5 23.5T280-640q0 33 23.5 56.5T360-560Zm0-80Zm0 400Z"/>
            </svg>
        `;
        // Append to admin list
        const adminList = document.getElementById('admin-list');
        adminList.appendChild(newButton);

        emailInput.value = ''; // clear input field
    });
</script>
</html>