<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>publications</title>
    <link href="/util.css" rel="stylesheet"/>
    <link rel="icon" href="/favicon.ico" type="image/x-icon">
    <script src="/htmx.min.js"></script>
</head>
<body>
{{>util/header}}

<div style="display: flex; justify-content: space-between; align-items: center; margin: 2rem 1.5rem 1rem 1.5rem;">
    <h1 style="font-size: 1.5rem; font-weight: 400; user-select: none;">
        publications
    </h1>
    {{#isAdmin}}
        <button id="add-publication" class="m3-button purple-button"  style="padding: 0.7rem 1.3rem; font-size: 1rem; border-radius: 0.5rem; box-shadow: none;">+ Add publication</button>
    {{/isAdmin}}
</div>

<section id="publications" style="flex: row; gap: 1rem; display: flex; flex-wrap: wrap; margin: 1rem 1.5rem;">
    {{#publications}}
        <div
            class="yellow-box"
            style="cursor: pointer;"
            onclick="window.location='/publication/{{id}}'"
        >
            <p class="yellow-box-text">{{title}}</p>
            <div class="yellow-box-buttons">
                {{#canHide}}
                    <button
                        onclick="event.stopPropagation()"
                        data-type="hide-button"
                        data-id="{{id}}"
                        data-title="{{title}}"
                        class="m3-button purple-button"
                        style="font-size: 0.8rem; width: 3.8rem; box-shadow: none;"
                    >Hide</button>
                {{/canHide}}
                {{#canEdit}}
                    <button
                        onclick="event.stopPropagation()"
                        data-type="edit-button"
                        data-id="{{id}}"
                        data-title="{{title}}"
                        class="m3-button yellow-button"
                        style="font-size: 0.8rem; width: 3.8rem; box-shadow: none;"
                    >Edit</button>
                {{/canEdit}}
            </div>
        </div>
    {{/publications}}
</section>

<dialog id="insert-publication-dialog" closedby="any" style="
        left: 0; right: 0; top: 0; bottom: 0;
        margin: auto; position: absolute;
        padding: 1.5rem;
        border: none; border-radius: 0.5rem;
    ">
    <p id="insert-publication-dialog-message">Add publication</p>
    <form id="insert-publication-dialog-form">
        <div class="text-field">
            <label>title</label>
            <input type="text" name="insert-publication-dialog-input">
        </div>
        <div style="display: flex; justify-content: space-between">
            <button id="insert-publication-dialog-negative" class="m3-button outline-button" type="button">Cancel</button>
            <button class="m3-button purple-button" style="box-shadow: none; padding-inline: 1.8rem;">Add</button>
        </div>
    </form>
</dialog>
<dialog id="update-publication-title-dialog" closedby="any" style="
        left: 0; right: 0; top: 0; bottom: 0;
        margin: auto; position: absolute;
        padding: 1.5rem;
        border: none; border-radius: 0.5rem;
    ">
    <p id="update-publication-title-dialog-message"></p>
    <form id="update-publication-title-dialog-form">
        <div class="text-field">
            <label>title</label>
            <input type="text" name="update-publication-title-dialog-input">
        </div>
        <div style="display: flex; justify-content: space-between">
            <button id="update-publication-title-dialog-negative" class="m3-button outline-button" type="button">Cancel</button>
            <button class="m3-button yellow-button" style="box-shadow: none; padding-inline: 0.8rem;">&nbsp&nbsp Edit &nbsp&nbsp</button>
        </div>
    </form>
</dialog>
<dialog id="hide-publication-dialog" closedby="any" style="
        left: 0; right: 0; top: 0; bottom: 0;
        margin: auto; position: absolute;
        padding: 1.5rem;
        border: none; border-radius: 0.5rem;
    ">
    <p id="hide-publication-dialog-message"></p>
    <br>
    <div style="display: flex; justify-content: space-between">
        <button id="hide-publication-dialog-negative" class="m3-button outline-button">Cancel</button>
        <button id="hide-publication-dialog-positive" class="m3-button red-button">Remove</button>
    </div>
</dialog>
</body>
<style>
    .m3-button:active {
        transform: none;
        box-shadow: none !important;
    }
</style>
<script>
    {{#isAdmin}}
    const insertPublicationDialog = document.getElementById('insert-publication-dialog');
    document.getElementById('add-publication').addEventListener('click', () => insertPublicationDialog.showModal());
    document.getElementById('insert-publication-dialog-negative').addEventListener('click', () => insertPublicationDialog.close());
    document.getElementById('insert-publication-dialog-form').addEventListener('submit', async (event) => {
        event.preventDefault();
        const publicationTitleInput = document.querySelector('input[name=insert-publication-dialog-input]');
        const publicationTitle = publicationTitleInput.value;
        const response = await fetch(`/api/publication/insert?title=${encodeURIComponent(publicationTitle)}`, { method: 'POST' });
        if(!response.ok) { alert('failed to add publication'); return; }
        const data = await response.json();
        const newPublication = document.createElement('div');
        newPublication.addEventListener('click', () => window.location = `/publication/${data.id}`);
        newPublication.className = 'yellow-box';
        newPublication.style = 'cursor: pointer;'
        newPublication.innerHTML = `
        <p class="yellow-box-text">${data.title}</p>
        <div class="yellow-box-buttons">
            <button
                onclick="event.stopPropagation()"
                data-type="hide-button"
                data-id="${data.id}"
                class="m3-button purple-button"
                onclick="onHideButton()"
                style="font-size: 0.8rem; width: 3.8rem; box-shadow: none;"
            >Hide</button>
            <button
                onclick="event.stopPropagation()"
                data-type="edit-button"
                data-id="${data.id}"
                class="m3-button yellow-button"
                onclick="onEditButton(${data.id}, ${data.title})"
                style="font-size: 0.8rem; width: 3.8rem; box-shadow: none;"
            >Edit</button>
        </div>`;
        document.getElementById('publications').prepend(newPublication);
        publicationTitleInput.value = '';
        insertPublicationDialog.close();
    });
    {{/isAdmin}}

    const updatePublicationTitleDialog = document.getElementById('update-publication-title-dialog');
    const updatePublicationTitleDialogMessage = document.getElementById('update-publication-title-dialog-message');
    const editButtons = document.querySelectorAll('button[data-type="edit-button"]');
    let currentUpdatePublicationTitle = null
    let currentUpdatePublicationId = document.getElementById('update-publication-title-dialog-message')
    function onEditButton(id, title) {
        updatePublicationTitleDialogMessage.innerHTML = `edit title of <b>${title}</b>`;
        currentUpdatePublicationId = id;
        currentUpdatePublicationTitle = title;
        updatePublicationTitleDialog.showModal();
    }
    editButtons.forEach(button => { button.addEventListener('click', () => onEditButton(button.dataset.id, button.dataset.title)); });
    document.getElementById('update-publication-title-dialog-negative').addEventListener('click', () => updatePublicationTitleDialog.close());
    document.getElementById('update-publication-title-dialog-form').addEventListener('submit', async (event) => {
        event.preventDefault();
        const publicationTitleInput = document.querySelector('input[name="update-publication-title-dialog-input"]');
        const newPublicationTitle = publicationTitleInput.value;
        const response = await fetch(`/api/publication/update-title?publicationId=${currentUpdatePublicationId}&title=${encodeURIComponent(newPublicationTitle)}`, { method: 'PUT' });
        if(!response.ok) { alert('failed to update publication title'); return; }
        Array.from(document.querySelectorAll('p'))
            .find(p => p.innerHTML == currentUpdatePublicationTitle)
            .innerHTML = newPublicationTitle;
        publicationTitleInput.value = '';
        updatePublicationTitleDialog.close();
    });

    const hidePublicationDialog = document.getElementById('hide-publication-dialog');
    const hideButtons = document.querySelectorAll('button[data-type="hide-button"]');

    function updatePublicationTitleDialogOpen(id) {
    }
    function onHideButton() {
        hidePublicationDialog.showModal()
    }
    hideButtons.forEach(button => { button.addEventListener('click', () => onHideButton(button)); });
    function dialogOpen(email) {
        document.getElementById('dialog-message').innerHTML = `Revoke admin privileges for <b>${email}</b>`;
        currentEmail = email
        dialog.showModal();
    }
</script>
</html>