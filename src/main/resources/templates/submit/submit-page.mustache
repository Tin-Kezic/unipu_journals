<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Submit Page</title>
    <link rel="stylesheet" href="/util.css" />
</head>
<body>
{{>util/header}}

<div style="margin: 2rem; padding: 2rem; background-color: var(--pale-yellow); border: 1.3px solid var(--beige); border-radius: 0.4rem; user-select: none;">
    <form>
        <div class="text-field" style="width: 100%; margin-top: -0.5rem;">
            <label>title</label>
            <input name="title" type="text" required>
        </div>

        <div style="display: flex; flex-direction: row; gap: 0.3rem;">
            <select name="category" class="dropdown">
                <option value="category">Category</option>
                {{#categories}}<option value="{{.}}">{{.}}</option>{{/categories}}
            </select>

            {{#isAdmin}}
                <a href="/category" type="button" class="m3-button purple-button" style="box-shadow: none; padding: 0.79rem 2rem; border-radius: 0.5rem; margin-left: 0.3rem; margin-right: 1rem; text-decoration: none;">Manage</a>
            {{/isAdmin}}

            <select name="publication" class="dropdown">
                <option value="publication">Publication</option>
                {{#publications}}<option value="{{.}}">{{.}}</option>{{/publications}}
            </select>

            <select name="section" class="dropdown">
                <option value="section">Section</option>
            </select>
            <script>
                const publicationSelect = document.querySelector('select[name="publication"]')
                const sectionSelect = document.querySelector('select[name="section"]')
                publicationSelect.addEventListener('change', async (event) => {
                    const response = await fetch(`/api/publication/${publicationSelect.value}/section-titles`, { method: 'GET' });
                    if(!response.ok) { alert('failed to fetch sections'); return; };
                    sectionSelect.innerHTML = '';
                    const sectionTitles = await response.json()
                    sectionTitles.forEach(sectionTitle => {
                        newOption = document.createElement('option');
                        newOption.value = sectionTitle;
                        newOption.innerHTML = sectionTitle;
                        sectionSelect.appendChild(newOption);
                    });
                });
            </script>
        </div>

        <br><br>

        <p style="font-size: 0.8rem; color: var(--light-gray); margin-left: 0.5rem; margin-bottom: 0.3rem;">Author</p>
        <div class="author-container">
            <div class="text-field">
                <label>full name</label>
                <input name="full-name" type="text" required>
            </div>
            <div class="text-field">
                <label>institutional email</label>
                <input name="institutional-email" type="email" required>
            </div>
            <div class="text-field">
                <label>country</label>
                <input name="country" type="text" required>
            </div>
            <div class="text-field">
                <label>affiliation/institution</label>
                <input name="affiliation" type="text" required>
            </div>

            <button type="button" class="m3-button yellow-button add-author" style="box-shadow: none; padding-inline: 1rem; border-radius: 0.5rem;">+ Add author</button>

            <label class="pale-yellow-checkbox-button">
                <input type="radio" name="corresponding-author" value="corresponding-author">
                <span class="checkbox" style="width: 11rem; text-align: center; padding-block: 1.3rem; text-wrap: nowrap;">Corresponding author</span>
            </label>
        </div>

        <div class="author-container">
            <div class="text-field">
                <label>full name</label>
                <input type="text" required>
            </div>
            <div class="text-field">
                <label>institutional email</label>
                <input type="email" required>
            </div>
            <div class="text-field">
                <label>country</label>
                <input type="text" required>
            </div>
            <div class="text-field">
                <label>affiliation/institution</label>
                <input type="text" required>
            </div>

            <button type="button" class="m3-button yellow-button remove-author" style="box-shadow: none; padding-inline: 0rem; font-size: 1.5rem; font-weight: lighter; border-radius: 0.5rem; margin-right: 5.6rem;">-</button>

            <label class="pale-yellow-checkbox-button">
                <input type="radio" name="corresponding-author" value="corresponding-author">
                <span class="checkbox" style="width: 11rem; text-align: center; padding-block: 1.3rem; text-wrap: nowrap;">Corresponding author</span>
            </label>
        </div>

        <div class="text-field">
            <label for="abstract">Abstract</label>
            <textarea id="abstract" required style="width:100%; resize:vertical; min-height: 20rem; padding: 1rem 2rem; font-size: 1rem; background-color: inherit;"></textarea>
        </div>
        <div style="display: flex; justify-content: space-between;">
            <label class="m3-button purple-button">Upload files
                <input
                    type="file" multiple
                    accept=".doc,.docx,.odt,.pdf,.zip,.7z"
                    style="display: none; box-shadow: none; padding-inline: 1.5rem; border-radius: 0.5rem; margin-bottom: 0.5rem;"/>
            </label>
            <button class="m3-button yellow-button">Submit</button>
        </div>
        <br> <br>
        <div id="file-list"></div>
    </form>
</div>

<script>
    document.querySelector('form').addEventListener('submit', async (event) => {
        event.preventDefault();
        const title = document.querySelector('input[name="title"]').value;
        const category = document.querySelector('select[name="category"]').value;
        const publication = document.querySelector('select[name="publication"]').value;
        const section = document.querySelector('select[name="section"]').value;
        const authors = 'author_1' //todo. implement
        const abstract = document.getElementById('abstract').value;
        const files = document.querySelector('input[type="file"]').files;
        const response = await fetch(`
            /api/publication/${publication}/section/${section}/insert
                ?title=${encodeURIComponent(title)}
                &category=${encodeURIComponent(category)}
                &authors=${encodeURIComponent(authors)}
                &abstract=${encodeURIComponent(abstract)}
                &files=${encodeURIComponent(files)}
            `, { method: 'POST' });
        if(!response.ok) { alert('failed to add publication'); return; }
        window.location.href = '/';
    });
    const fileInput = document.querySelector('input[type="file"]');
    const fileList = document.getElementById('file-list');

    fileInput.addEventListener('change', () => {
        // clear previous file buttons
        fileList.innerHTML = '';

        Array.from(fileInput.files).forEach(file => {
            const div = document.createElement('div');
            div.className = 'pdf-container';
            div.style = 'background-color:white; margin-bottom: 1rem;';
            div.innerHTML = `${file.name} <button class="pdf-remove-button">-</button>`;
            fileList.appendChild(div);
        })
    });
</script>
</body>

<style>
    select {
        width: 100%;
        height: 2.7rem;
        font-size: 1rem;
        background: inherit;
        border: 1.2px solid var(--light-gray);
        border-radius: 0.3rem;
    }
    .author-container {
        display: flex !important;
        flex-wrap: wrap !important;
        gap: 0.5rem;
        align-items: center;
        padding-inline: 1rem;
        border: 1.3px solid var(--beige);
        border-radius: 0.4rem;
        margin: 1rem 0;
    }
    .author-container .text-field {
        flex: 1 1 12rem;
        min-width: 10rem;
    }
    .author-container .m3-button {
        flex: 0 1 auto;
        min-width: 8rem;
    }
    .author-container .remove-author {
        flex: 0 1 auto;
        min-width: 2.5rem;
        padding: 0.3rem 0.5rem;
    }
    @media (max-width: 480px) {
        .author-container .m3-button {
            padding: 0.5rem 1rem;
            font-size: 0.9rem;
        }
    }
    @media (max-width: 768px) {
        .category-list {
            grid-template-columns: 1fr !important;
            justify-items: center;
        }
    }
</style>
</html>